name: CI/CD for FastAPI

on:
  push:
    branches:
      - main  # main 브랜치로 푸시될 때만 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t yungi1026/temporis-arts-was:1.0 .
        docker push yungi1026/temporis-arts-was:1.0

    - name: Create PEM file
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: Test SSH Connection to EC2
      run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful'"

    - name: Deploy to EC2
      run: |
        ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
        cd /home/${{ secrets.EC2_USER }}
        docker-compose down
        docker-compose pull
        docker-compose up -d
        EOF
        
    - name: Use Github Secrets
      env:
        API_KEY: ${{ secrets.API_KEY }}
        APP_ID: ${{ secrets.APP_ID }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        echo "API_KEY: $API_KEY"
        echo "APP_ID: $APP_ID"
        echo "DATABASE_URL: $DATABASE_URL"
        echo "DOCKER_PASSWORD: $DOCKER_PASSWORD"
        echo "DOCKER_USERNAME: $DOCKER_USERNAME"
        echo "POSTGRES_PASSWORD: $POSTGRES_PASSWORD"
        echo "SECRET_KEY: $SECRET_KEY"
  
